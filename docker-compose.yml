version: "2.1"
services:

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${ConfigPath}/sonarr:/config
      - ${MediaPath}/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${ConfigPath}/radarr:/config
      - ${MediaPath}/data:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${ConfigPath}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WEBUI_PORT=8080
    volumes:
      - ${ConfigPath}/qbittorrent:/config
      - ${MediaPath}/data/download:/data/download
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ${ConfigPath}/jellyfin:/config
      - ${MediaPath}/data/media/tv:/data/tvshows
      - ${MediaPath}/data/media/movies:/data/movies
    ports:
      - 8096:8096
    restart: unless-stopped


  # calibre:
  #   image: lscr.io/linuxserver/calibre:latest
  #   container_name: calibre
  #   # security_opt:
  #   #   - seccomp:unconfined #optional
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #     # - PASSWORD= #optional
  #     # - CLI_ARGS= #optional
  #   volumes:
  #     - ${ConfigPath}/calibre:/config
  #     - ${MediaPath}/data/media/comics:/config/lib
  #   ports:
  #     - 8080:8080
  #     - 8181:8181
  #     - 8081:8081
  #   restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${ConfigPath}/jackett:/config
    ports:
      - 9117:9117
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Kolkata
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

#   kavita:
#     image: kizaing/kavita:latest
#     container_name: kavita
#     volumes:
#         - ${MediaPath}/data/media/comics:/manga
#         - ${ConfigPath}/kavita:/kavita/config
#     ports:
#         - 5001:5000
#     restart: unless-stopped    

#   app:
#     container_name: kaizoku
#     image: ghcr.io/oae/kaizoku:latest
#     environment:
#       - DATABASE_URL=postgresql://kaizoku:kaizoku@db:5432/kaizoku
#       - KAIZOKU_PORT=3000
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#       - PUID=1000
#       - PGID=1000
#       - TZ=Asia/Kolkata
#     volumes:
#       - ${MediaPath}/data/media/comics:/data
#       - ${ConfigPath}/manga:/config
#     depends_on:
#       db:
#         condition: service_healthy
#     ports:
#       - '3000:3000'
#   redis:
#     image: redis:7-alpine
#     volumes:
#       - redis:/data
#   db:
#     image: postgres:alpine
#     restart: unless-stopped
#     healthcheck:
#       test: ['CMD-SHELL', 'pg_isready -U kaizoku']
#       interval: 5s
#       timeout: 5s
#       retries: 5
#     environment:
#       - POSTGRES_USER=kaizoku
#       - POSTGRES_DB=kaizoku
#       - POSTGRES_PASSWORD=kaizoku
#     volumes:
#       - db:/var/lib/postgresql/data

# volumes:
#   db:
#   redis: